@import "tailwindcss";
@import "quill/dist/quill.snow.css";

:root {
  --background: #f8fafc;
  --black: #222;
  --white: #ffffff;
  --primary: #3a59d1;
  --secondary: #57564f;
  --light-secondary: #eee;
  --tertiary: #fffff0;
  --border: #a6aebf;
}

@theme inline {
  --color-background: var(--background);
  --color-black: var(--black);
  --color-primary: var(--primary);
  --color-secondary: var(--secondary);
  --color-light-secondary: var(--light-secondary);
  --color-border: var(--border);
}

@layer base {
  h2 {
    /* Default (mobile-first) styles */
    @apply text-xl font-extrabold;

    /* Responsive styles for md and up */
    @variant md {
      @apply text-2xl;
    }

    /* Responsive styles for lg and up */
    @variant lg {
      @apply text-5xl;
    }

    /* Responsive styles for xl and up */
    @variant xl {
      @apply text-6xl;
    }

    /* Responsive styles for 2xl and up */
    @variant 2xl {
      @apply text-7xl;
    }
  }
  h4 {
    /* Default (mobile-first) styles */
    @apply text-base font-bold;

    /* Responsive styles for md and up */
    @variant md {
      @apply text-xl;
    }

    /* Responsive styles for lg and up */
    @variant lg {
      @apply text-2xl;
    }

    /* Responsive styles for xl and up */
    @variant xl {
      @apply text-3xl;
    }

    /* Responsive styles for 2xl and up */
    @variant 2xl {
      @apply text-4xl;
    }
  }
  h6 {
    /* Default (mobile-first) styles */
    @apply text-base font-bold;

    /* Responsive styles for md and up */
    @variant md {
      @apply text-base;
    }

    /* Responsive styles for lg and up */
    @variant lg {
      @apply text-xl;
    }

    /* Responsive styles for xl and up */
    @variant xl {
      @apply text-2xl;
    }

    /* Responsive styles for 2xl and up */
    @variant 2xl {
      @apply text-2xl;
    }
  }
  p {
    /* Default (mobile-first) styles */
    @apply text-xs;

    /* Responsive styles for md and up */
    @variant md {
      @apply text-sm;
    }

    /* Responsive styles for lg and up */
    @variant lg {
      @apply text-lg leading-6;
    }

    /* Responsive styles for xl and up */
    @variant xl {
      @apply text-lg leading-8;
    }

    /* Responsive styles for 2xl and up */
    @variant 2xl {
      @apply text-2xl leading-8;
    }
  }
}

body {
  background: var(--background);
  color: var(--black);
}

/* From Uiverse.io by anand_4957 */
.loader {
  position: absolute;
  top: 50%;
  margin-left: -50px;
  left: 50%;
  animation: speeder 0.4s linear infinite;
}
.loader > span {
  height: 5px;
  width: 35px;
  background: #000;
  position: absolute;
  top: -19px;
  left: 60px;
  border-radius: 2px 10px 1px 0;
}
.base span {
  position: absolute;
  width: 0;
  height: 0;
  border-top: 6px solid transparent;
  border-right: 100px solid #000;
  border-bottom: 6px solid transparent;
}
.base span:before {
  content: "";
  height: 22px;
  width: 22px;
  border-radius: 50%;
  background: #000;
  position: absolute;
  right: -110px;
  top: -16px;
}
.base span:after {
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  border-top: 0 solid transparent;
  border-right: 55px solid #000;
  border-bottom: 16px solid transparent;
  top: -16px;
  right: -98px;
}
.face {
  position: absolute;
  height: 12px;
  width: 20px;
  background: #000;
  border-radius: 20px 20px 0 0;
  transform: rotate(-40deg);
  right: -125px;
  top: -15px;
}
.face:after {
  content: "";
  height: 12px;
  width: 12px;
  background: #000;
  right: 4px;
  top: 7px;
  position: absolute;
  transform: rotate(40deg);
  transform-origin: 50% 50%;
  border-radius: 0 0 0 2px;
}
.loader > span > span:nth-child(1),
.loader > span > span:nth-child(2),
.loader > span > span:nth-child(3),
.loader > span > span:nth-child(4) {
  width: 30px;
  height: 1px;
  background: #000;
  position: absolute;
  animation: fazer1 0.2s linear infinite;
}
.loader > span > span:nth-child(2) {
  top: 3px;
  animation: fazer2 0.4s linear infinite;
}
.loader > span > span:nth-child(3) {
  top: 1px;
  animation: fazer3 0.4s linear infinite;
  animation-delay: -1s;
}
.loader > span > span:nth-child(4) {
  top: 4px;
  animation: fazer4 1s linear infinite;
  animation-delay: -1s;
}
@keyframes fazer1 {
  0% {
    left: 0;
  }
  100% {
    left: -80px;
    opacity: 0;
  }
}
@keyframes fazer2 {
  0% {
    left: 0;
  }
  100% {
    left: -100px;
    opacity: 0;
  }
}
@keyframes fazer3 {
  0% {
    left: 0;
  }
  100% {
    left: -50px;
    opacity: 0;
  }
}
@keyframes fazer4 {
  0% {
    left: 0;
  }
  100% {
    left: -150px;
    opacity: 0;
  }
}
@keyframes speeder {
  0% {
    transform: translate(2px, 1px) rotate(0deg);
  }
  10% {
    transform: translate(-1px, -3px) rotate(-1deg);
  }
  20% {
    transform: translate(-2px, 0px) rotate(1deg);
  }
  30% {
    transform: translate(1px, 2px) rotate(0deg);
  }
  40% {
    transform: translate(1px, -1px) rotate(1deg);
  }
  50% {
    transform: translate(-1px, 3px) rotate(-1deg);
  }
  60% {
    transform: translate(-1px, 1px) rotate(0deg);
  }
  70% {
    transform: translate(3px, 1px) rotate(-1deg);
  }
  80% {
    transform: translate(-2px, -1px) rotate(1deg);
  }
  90% {
    transform: translate(2px, 1px) rotate(0deg);
  }
  100% {
    transform: translate(1px, -2px) rotate(-1deg);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* nav section */
.nav-link {
  position: relative;
  /* Set initial text color */
  color: var(--background);
  transition: color 300ms ease-in-out;
  width: 100px;
}

/* Create the sliding background pseudo-element */
.nav-link::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 0;
  background-color: var(--background);
  transition: width 500ms ease-in-out;
  z-index: -1; /* Keep the pseudo-element behind the text */
}

/* Animate on hover */
.nav-link:hover::before {
  width: 100%;
}

/* Change text color on hover */
.nav-link:hover {
  color: black;
}

.fade-in-delayed {
  animation: fadeIn 1s ease-in-out forwards;
}

.initial-hidden {
  opacity: 0;
}

dialog {
  /* Apply positioning and centering */
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@keyframes scroll {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-50%);
  }
}

.animate-scroll {
  animation: scroll 20s linear infinite;
}






